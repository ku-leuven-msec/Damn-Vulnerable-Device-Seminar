[[0;32m+[0m][0;32m /log/firmware/firmware/usr/lib/python3.8/site-packages/pip/_vendor/html5lib/treewalkers/etree_lxml.py[0m
23:class Root(object):.
31:str(et.docinfo.root_name),.
38:  node = et.getroot().
62:__init__(self, root_node, name, pu.
63:        self.root_node = root_no.
72:   return self.root_node.children[.
75:class FragmentRoot(Root):.
85:self, fragment_root, obj):.
86:        self.root_node = fragmen.
86:t_root.
101:iblings = self.root_node.children.
132:tree = FragmentRoot(tree).
135:        tree = Root(tree).
145:instance(node, Root):.
[[0;32m+[0m][0;32m /log/firmware/firmware/usr/lib/python3.8/site-packages/pip/_vendor/html5lib/treebuilders/etree_lxml.py[0m
6:iblings of the root element.
53:elementTree.getroot().
54:elementTree.getroot().itersiblings.
71:r(element, "getroot"):.
77:lement.docinfo.root_name.
80:lement.docinfo.root_name,.
84:t = element.getroot().
154:lement.docinfo.root_name.
156:ent(element.getroot()).
298:elementTree.getroot().
333:elementTree.getroot()[-1].tag == c.
334:nts beyond the root elements", Dat.
337:    def insertRoot(self, token):.
363:nt name to the root element", Data.
365:        root = etree.fromst.
370:            root.addprevious(co.
372:  # Create the root document and a.
374:_elementTree = root.getroottree().
376:    # Give the root element the ri.
383:        root.tag = etree_ta.
385:     # Add the root element to the.
386:        root_element = self.
387:        root_element._eleme.
387:nt = root.
388:ldNodes.append(root_element).
389:lements.append(root_element).
