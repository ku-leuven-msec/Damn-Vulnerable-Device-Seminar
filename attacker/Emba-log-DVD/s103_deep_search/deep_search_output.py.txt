[[0;32m+[0m][0;32m /log/firmware/firmware/usr/lib/python3.8/site-packages/dnf/cli/output.py[0m
47:import pwd.
64:        'upgraded': [],.
92:tionItemAction_UPGRADE:.
93:            b.upgraded.append(tsi).
545:ed by"), self._pwd_ui_username(ui.
1041:STALL | hawkey.UPGRADE | hawkey.UPGRA.
1061:tions = hawkey.UPGRADE | hawkey.UPGRA.
1061:L | hawkey.DISTUPGRADE | \.
1062:    hawkey.DISTUPGRADE_ALL | hawkey.D.
1106:packages to be upgraded..
1107:'), list_bunch.upgraded),.
1198:            upgrade_env_group = se.
1198:._history.env._upgraded.
1199:            if upgrade_env_group:.
1202:  for group in upgrade_env_group.valu.
1219:            upgrade_group = self.b.
1219:history.group._upgraded.
1220:            if upgrade_group:.
1223:  for group in upgrade_group.values().
1244:to force their upgrade)") % " ".join(.
1251:self.base.conf.upgrade_group_objects_.
1251:upgrade:.
1343:           (_('Upgrade'), len(list_bu.
1343:nch.upgraded), 0),.
1436: tsis) in [(_('Upgraded'), list_bunch.
1436:.upgraded),.
1506:tionItemAction_UPGRADED, libdnf.trans.
1519:    def _pwd_ui_username(se.
1521: return [self._pwd_ui_username(u,.
1541:        user = pwd.getpwuid(int(u.
1680:  name = self._pwd_ui_username(ol.
1787: name = [self._pwd_ui_username(ui.
1790:      'o' : _('Upgraded'), 'n' : _('D.
1957:te'       : _('Upgrade'),.
1958:ted'      : _('Upgraded'),.
2002:tionItemAction_UPGRADED and.
2003:tionItemAction_UPGRADE):.
2014:tionItemAction_UPGRADED, libdnf.trans.
2082:tionItemAction_UPGRADED and.
2083:tionItemAction_UPGRADE):.
2093:tionItemAction_UPGRADED, libdnf.trans.
2130: %s will be an upgrade').
2140:.%s %s will be upgraded').
